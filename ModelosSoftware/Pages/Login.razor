@page "/login"
@using ModelosSoftware.Data;
@inject HttpClient Http
@inject NavigationManager NavigationManager

<EditForm Model="@usuariocredenciales" OnValidSubmit="@HandleLogin">
    <InputText @bind-Value="usuariocredenciales.Username" placeholder="Usuario" />
    <InputText @bind-Value="usuariocredenciales.Password" placeholder="Contraseña" type="password" />
    <button type="submit">Iniciar sesión</button>
</EditForm>

@if (!string.IsNullOrEmpty(mensaje))
{
    <div class="alert alert-info">@mensaje</div>
}

@code {
    private UsuarioCredenciales usuariocredenciales = new UsuarioCredenciales();
    private string mensaje;

    private async Task HandleLogin()
    {
        var apiName = $"api/Usuarios?usuario={usuariocredenciales.Username}&password={usuariocredenciales.Password}";
        try
        {
            var apiResponse = await Http.GetFromJsonAsync<Usuario[]>(apiName);
            if (apiResponse.Length > 0 && apiResponse[0].OBSERVACION.Equals("INGRESO EXITOSO"))
            {
                // Login exitoso, redirige o maneja el estado de la sesión aquí
                NavigationManager.NavigateTo("/");
            }
            else
            {
                // Login fallido, muestra un mensaje de error
                mensaje = "Credenciales inválidas o usuario no encontrado.";
            }
        }
        catch (HttpRequestException e)
        {
            mensaje = $"Error al conectar con la API: {e.Message}";
            // Manejo de errores de conexión aquí
        }
    }
}

